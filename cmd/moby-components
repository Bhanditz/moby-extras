#!/bin/bash

set -e


list_components() {
	git config --name-only --get-regexp 'component\.[^.]*\.url' |
	sed -e 's/^component\.//' -e 's/\.url$//' |
	{
		while read component; do
			if [ $(git config --get component.$component.skip) ]; then
				echo >&2 "[$component] Skipping"
				continue
			fi
			echo "$component"
		done
	}
}

update_all_sources() {
	echo "--- Checking component remote sources for updates"
	list_components | {
		while read component; do
			update_source $component
		done
	}
}

update_source() {
	component=$1
	url=$(git config --get component.$component.url)
	branch=$(git config --get component.$component.branch)
	echo "[$component] fetching $url $branch"
	git fetch $url $branch:refs/components/$component/src
}


update_all_caches() {
	echo "--- Updating component caches"
	list_components | {
		while read component; do
			update_cache $component
		done
	}
}

get_mountpoint() {
	echo "components/$1"
}

update_cache() {
	component=$1
	src=refs/components/$component/src
	tmp=refs/components/$component/tmp/$RANDOM
	cache=refs/components/$component/cache
	git update-ref $tmp $(git show-ref --verify -s $src)
	git show-ref --verify $tmp
	mountpoint=$(get_mountpoint "$component")
	transform_branch $tmp $mountpoint
	echo "[$component] moving $tmp to $cache"
	git update-ref $cache $(git show-ref --verify -s $tmp)
	git update-ref -d $tmp
	git update-ref -d refs/original/$tmp
	git show-ref --verify $cache
}

transform_branch() {
	branch=$1
	mountpoint=$2

	if [ -z "$mountpoint" ]; then
		return
	fi
	git filter-branch -f --index-filter "
		git ls-files -s | sed 's,	,	$mountpoint/,' |
		GIT_INDEX_FILE=\$GIT_INDEX_FILE.new git update-index --index-info &&
		if test -f \"\$GIT_INDEX_FILE.new\"; then
			mv \$GIT_INDEX_FILE.new \$GIT_INDEX_FILE;
		fi
	" $branch
}

export GIT_CONFIG=`pwd`/components.conf

# Change the working directory to the root of the git repo
REPOROOT=$(git rev-parse --show-toplevel)
cd $REPOROOT

##export GIT_DIR=$REPOROOT/.git
##TMP=$(mktemp -d)
##export GIT_WORK_TREE=$TMP
##cd $GIT_WORK_TREE

# Initialize an empty temporary index file
##TMP2=$(mktemp)
##cp $GIT_DIR/index $TMP2
##export GIT_INDEX_FILE=$TMP2
##echo '100644 8a1218a1024a212bb3db30becd860315f9f3ac52 0	foo' | git update-index --index-info
##git rm --cached foo


update_all_sources
update_all_caches

##rm -fr "$TMP"
##rm -f "$TMP2"
